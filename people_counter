#include <ESP8266WiFi.h>
const char* ssid = "Man";                                  //fill in your wifi name
const char* password = "manish12345";                              //fill in your wifi password
#include <BlynkSimpleEsp8266.h>
#include <SPI.h>
#define BLYNK_PRINT Serial

WiFiClient client;

const int trigPin = D0;
const int echoPin = D1;
const int trigPin1 = D3;
const int echoPin1 = D4;
int peopleIn, peopleOut,totalInside;
long duration,duration1;
int distanceCm,distanceCm1;
char auth[] = "0194nRtX6XKb1JTV8gObsL7Amx3QCdAS";


void setup() {
  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);
  pinMode(trigPin1, OUTPUT);
  pinMode(echoPin1, INPUT);
  Serial.begin(115200);
  WiFi.begin(ssid, password);

Serial.println();
Serial.println();
Serial.print("Connecting to ");
Serial.println(ssid);
Serial.print("..........");
Serial.println();
WiFi.begin(ssid, password);

while (WiFi.status() != WL_CONNECTED) {
delay(500);
}

Blynk.begin(auth, ssid, pass);

Blynk.notify("Device started");
   // Setup a function to be called every minute
  timer.setInterval(1000L,notifyUptime);

}
Serial.println("WiFi connected");
Serial.println();

}


void loop() {
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);
  duration = pulseIn(echoPin, HIGH);
  distanceCm = duration * 0.0340 / 2;
  
  digitalWrite(trigPin1, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin1, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin1, LOW);
  duration1 = pulseIn(echoPin1, HIGH);
  distanceCm1 = duration1 * 0.0340 / 2;
  
  
  Serial.println("Distance1: ");
  Serial.println(distanceCm);
  Serial.println("Distance2: ");
  Serial.println(distanceCm1);

  
  delay(1000);

  if(distanceCm<=30 && distanceCm>0)
  {
    peopleIn = peopleIn +1;
    totalInside = totalInside +1;
    
  }
  else if(distanceCm1<=30 && distanceCm1>0)
  {
    peopleOut = peopleOut +1;
    totalInside = totalInside-1;
    if(totalInside<= 0){
      totalInside = 0;
    }
    if(peopleOut>peopleIn){
      peopleOut=peopleIn;
    }
  }
  Serial.println("People Gone Inside");
  Serial.println(peopleIn);
  Serial.println("People Gone Outside");
  Serial.println(peopleOut);
  Serial.println("People in Boat");
  Serial.println(totalInside);
}

void notifyUptime(){
  Blynk.virtualWrite(V1, peopleIn);
  Blynk.virtualWrite(V2, peopleOut);
  Blynk.virtualWrite(V3, totalInside);
}